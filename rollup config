import resolve from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import babel from '@rollup/plugin-babel';
import { terser } from 'rollup-plugin-terser';
import copy from 'rollup-plugin-copy';
import replace from '@rollup/plugin-replace';
import path from 'path';

const isProd = process.env.NODE_ENV === 'production';

export default {
  input: 'index.js',
  output: {
    dir: 'iw',
    format: 'es',
    sourcemap: !isProd,
  },
  plugins: [
    replace({
      preventAssignment: true,
      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'development')
    }),
    resolve(),
    commonjs(),
    babel({
      babelHelpers: 'bundled',
      exclude: 'node_modules/**',
      presets: [
        ['@babel/preset-env', {
          targets: '> 0.25%, not dead',
          useBuiltIns: 'entry',
          corejs: 3
        }]
      ],
      plugins: [
        '@babel/plugin-proposal-class-properties',
        '@babel/plugin-proposal-private-methods'
      ]
    }),
    copy({
      targets: [
        { src: 'node_modules/ktb-web/global.css', dest: 'iw/css' }
      ]
    }),
    isProd && terser({
      compress: {
        passes: 3,
        pure_funcs: ['console.log'],
      },
      format: {
        comments: false
      }
    })
  ],
  treeshake: {
    moduleSideEffects: false
  }
};
